#include <behaviors/mouse_keys.dtsi>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/mouse.h>
#include <dt-bindings/zmk/rgb.h>

#define ZMK_MOUSE_DEFAULT_MOVE_VAL 1200  // 600
#define ZMK_MOUSE_DEFAULT_SCRL_VAL 20    // 10
#define U_MS_U &mmv MOVE_UP
#define U_MS_D &mmv MOVE_DOWN
#define U_MS_L &mmv MOVE_LEFT
#define U_MS_R &mmv MOVE_RIGHT

/ {
    behaviors {
        mmv {
            acceleration-exponent = <1>;      // 1
            time-to-max-speed-ms = <900>;    // 40
            delay-ms = <0>;                   // 0
        };

        msc {
            acceleration-exponent = <1>;      // 0
            time-to-max-speed-ms = <400>;      // 500
            delay-ms = <0>;                   // 10
        };
    };

    rgb_encoder: rgb_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        label = "RGB_ENCODER";
        #sensor-binding-cells = <0>;
        bindings = <&rgb_ug RGB_BRI>, <&rgb_ug RGB_BRD>;
    };

    scroll_encoder: scroll_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&msc SCRL_DOWN>, <&msc SCRL_UP>;

        tap-ms = <30>;
    };

    combos {
        compatible = "zmk,combos";

        KB_Reset {
            bindings = <&gresc>;
            key-positions = <0 26 12 38>;
        };

        SysReset {
            bindings = <&sys_reset>;
            key-positions = <4 12>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            display-name = "QWERTY";
            label = "QWERTY";
            bindings = <
&kp TAB   &kp Q        &kp W     &kp E        &kp R                &kp T        &kp UP_ARROW     &kp Y        &kp U             &kp I        &kp O    &kp P           &kp ESC
&kp LALT  &kp A        &kp S     &kp D        &kp F                &kp G        &kp DOWN_ARROW   &kp H        &kp J             &kp K        &kp L    &kp SEMI        &kp SQT
&kp LWIN  &mt LSHFT Z  &kp X     &kp C        &kp V                &kp B        &kp LEFT_ARROW   &kp N        &kp M             &kp COMMA    &kp DOT  &mt RSHFT FSLH  &kp BACKSLASH
                       &kp HOME  &lt 2 PG_UP  &mt LCTRL BACKSPACE  &lt 1 DEL    &kp RIGHT_ARROW  &lt 3 ENTER  &mt RSHIFT SPACE  &lt 4 PG_DN
                                                                                &kp ENTER
            >;

            sensor-bindings = <&scroll_encoder>;
        };

        lower_layer {
            display-name = "SYMBOL";
            label = "SYMBOL";
            bindings = <
&none          &kp EXCL  &kp AT      &kp HASH  &kp DLLR  &kp PRCNT    &mmv MOVE_UP     &kp CARET  &kp AMPS   &kp ASTRK  &kp LPAR  &kp RPAR  &none
&kp LG(SPACE)  &none     &none       &none     &none     &none        &mmv MOVE_DOWN   &kp GRAVE  &kp MINUS  &kp EQUAL  &kp LBKT  &kp RBKT  &none
&kp LC(SPACE)  &none     &none       &none     &none     &none        &mmv MOVE_LEFT   &kp TILDE  &kp UNDER  &kp PLUS   &kp LBRC  &kp RBRC  &none
                         &kp K_MUTE  &none     &none     &trans       &mmv MOVE_RIGHT  &trans     &trans     &trans
                                                                      &mkp LCLK
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
        };

        raise_layer {
            display-name = "NUM&FN";
            label = "NUM&FN";
            bindings = <
&kp CAPS   &kp F1  &kp F2      &kp F3   &kp F4   &none     &mmv MOVE_UP     &kp PERCENT  &kp N7  &kp N8   &kp N9  &kp MINUS  &kp BSPC
&trans     &kp F5  &kp F6      &kp F7   &kp F8   &none     &mmv MOVE_DOWN   &none        &kp N4  &kp N5   &kp N6  &kp PLUS   &kp SLASH
&kp K_APP  &kp F9  &kp F10     &kp F11  &kp F12  &none     &mmv MOVE_LEFT   &none        &kp N1  &kp N2   &kp N3  &kp ENTER  &kp ASTRK
                   &kp C_MUTE  &trans   &none    &trans    &mmv MOVE_RIGHT  &trans       &kp N0  &kp DOT
                                                           &mkp LCLK
            >;

            sensor-bindings = <&scroll_encoder>;
        };

        super_layer {
            display-name = "MS&NAV";
            label = "MS&NAV";
            bindings = <
&trans  &mkp MB5  &kp K_SCROLL_UP    &mmv MOVE_UP    &none            &mkp MCLK    &mmv MOVE_UP     &mkp MCLK  &kp HOME        &kp UP_ARROW    &kp PG_UP        &none  &kp PSCRN
&trans  &mkp MB4  &mmv MOVE_LEFT     &mmv MOVE_DOWN  &mmv MOVE_RIGHT  &mkp LCLK    &mmv MOVE_DOWN   &mkp LCLK  &kp LEFT_ARROW  &kp DOWN_ARROW  &kp RIGHT_ARROW  &none  &kp INS
&trans  &none     &kp K_SCROLL_DOWN  &none           &none            &mkp RCLK    &mmv MOVE_LEFT   &mkp RCLK  &kp END         &none           &kp PG_DN        &none  &none
                  &kp C_MUTE         &trans          &trans           &trans       &mmv MOVE_RIGHT  &trans     &none           &none
                                                                                   &mkp LCLK
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
        };

        hyper_layer {
            label = "KB&CTRL";
            display-name = "KB&CTRL";
            bindings = <
&bt BT_CLR       &bt BT_SEL 0     &bt BT_SEL 1     &bt BT_SEL 2     &bt BT_PRV       &bt BT_NXT         &mmv MOVE_UP     &none   &kp K_MUTE    &kp C_RW  &none  &none  &none
&rgb_ug RGB_ON   &rgb_ug RGB_EFF  &rgb_ug RGB_BRI  &rgb_ug RGB_SPI  &rgb_ug RGB_HUI  &rgb_ug RGB_SAI    &mmv MOVE_DOWN   &none   &kp C_VOL_DN  &kp C_PP  &none  &none  &none
&rgb_ug RGB_OFF  &rgb_ug RGB_EFR  &rgb_ug RGB_BRD  &rgb_ug RGB_SPD  &rgb_ug RGB_HUD  &rgb_ug RGB_SAD    &mmv MOVE_LEFT   &none   &kp C_VOL_UP  &kp C_FF  &none  &none  &none
                                  &kp C_MUTE       &trans           &trans           &trans             &mmv MOVE_RIGHT  &trans  &none         &trans
                                                                                                        &mkp LCLK
            >;

            sensor-bindings = <&rgb_encoder>;
        };
    };
};
